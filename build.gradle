plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'maven-publish'
}

apply plugin: 'jacoco'

group 'rip.deadcode'
version '0.3'

repositories {
    mavenCentral()
}

dependencies {
    compile(
            'com.google.guava:guava:27.0.1-jre',
            'com.google.code.findbugs:jsr305:3.0.2',

            'org.junit.jupiter:junit-jupiter-api:5.4.1',
            'com.google.truth:truth:0.43',
            'com.google.truth.extensions:truth-java8-extension:0.43',
    )
    testCompile(
            'org.jetbrains.kotlin:kotlin-stdlib-jdk8',

            'org.mockito:mockito-core:2.25.1',
            'com.google.jimfs:jimfs:1.1'
    )
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

publishing {
    repositories {
        maven {
            name = 'github'
            url = 'https://maven.pkg.github.com/minebreaker/Izvestia'
            credentials {
                username = project.hasProperty("GITHUB_USER") ? GITHUB_USER : ''
                password = project.hasProperty("GITHUB_TOKEN") ? GITHUB_TOKEN : ''
            }
        }
    }

    publications {
        maven(MavenPublication) {

            version '0.3'

            pom {
                url = 'https://github.com/minebreaker/Izvestia'
                licenses {
                    license {
                        name = 'MIT'
                    }
                }
            }

            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}
